
    Usage: babel-node utils/streams.js [--help] [--action=(action) [--file=(filePath)] [--path=(path)] [--count=(count)]]

    where (action) is one of:
        io, transform, transform-file, transform-save-file, bundle-css, create-file



    io                     Pipes a file content to the process.stdout
    Usage:                 babel-node utils/streams.js -a io -f filePath

    transform              Transforms the process.stdin to upper case and pipes it to the process.stdout
    Usage:                 babel-node utils/streams.js -a transform

    transform-file         Transforms a file from CSV format to JSON format and pipes it to the process.stdout
    Usage:                 babel-node utils/streams.js -a transform-file -f filePath

    transform-save-file    Transforms a file from CSV format to JSON format and saves it
    Usage:                 babel-node utils/streams.js -a transform-save-file -f filePath

    bundle-css             babel-Concats a bunch of CSS files into a one file
    Usage:                 node utils/streams.js -a bundle-css -t path

    create-file            Creates file that is filled with the common structured data
    Usage:                 babel-node utils/streams.js -a create-csv -f filePath -c count



    -h, --help      Quick help on usage
    -a, --action    Action to be performed
    -f, --file      Path of a file to read
    -p, --path      Path of a folder that contains a bunch of CSS files
    -c, --count     Count of lines
